{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fmodern\fcharset0 Courier-Bold;\f1\fmodern\fcharset0 Courier;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red102\green0\blue145;\red210\green53\blue44;
\red50\green133\blue2;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c48235\c12157\c63529;\cssrgb\c86667\c29412\c22353;
\cssrgb\c23922\c58039\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 var
\f1\b0  \cf3 \strokec3 mcd64\cf2 \strokec2  
\f0\b =
\f1\b0  
\f0\b \cf3 \strokec3 ee.ImageCollection
\f1\b0 \cf2 \strokec2 (\cf4 \strokec4 "MODIS/006/MCD64A1"\cf2 \strokec2 ),\
    \cf3 \strokec3 modisNDVI_old\cf2 \strokec2  
\f0\b =
\f1\b0  
\f0\b \cf3 \strokec3 ee.ImageCollection
\f1\b0 \cf2 \strokec2 (\cf4 \strokec4 "MODIS/MCD43A4_006_NDVI"\cf2 \strokec2 ),\
    \cf3 \strokec3 geometry2\cf2 \strokec2  
\f0\b =
\f1\b0  
\f0\b \cf3 \strokec3 ee.FeatureCollection
\f1\b0 \cf2 \strokec2 (\cf4 \strokec4 "users/viktorwu/CA_State"\cf2 \strokec2 ),\
    \cf3 \strokec3 land_cover\cf2 \strokec2  
\f0\b =
\f1\b0  
\f0\b \cf3 \strokec3 ee.ImageCollection
\f1\b0 \cf2 \strokec2 (\cf4 \strokec4 "USFS/GTAC/LCMS/v2020-5"\cf2 \strokec2 ),\
    \cf3 \strokec3 modisNDVI_new\cf2 \strokec2  
\f0\b =
\f1\b0  
\f0\b \cf3 \strokec3 ee.ImageCollection
\f1\b0 \cf2 \strokec2 (\cf4 \strokec4 "MODIS/MCD43A4_006_NDVI"\cf2 \strokec2 ),\
    \cf3 \strokec3 modisNDVI_dep\cf2 \strokec2  
\f0\b =
\f1\b0  
\f0\b \cf3 \strokec3 ee.ImageCollection
\f1\b0 \cf2 \strokec2 (\cf4 \strokec4 "MODIS/MCD43A4_NDVI"\cf2 \strokec2 ),\
    \cf3 \strokec3 geometry\cf2 \strokec2  
\f0\b =
\f1\b0  \
    \cf5 \strokec5 /* color: #ff0000 */\cf2 \strokec2 \
    \cf5 \strokec5 /* displayProperties: [\
      \{\
        "type": "rectangle"\
      \}\
    ] */\cf2 \strokec2 \
    
\f0\b \cf3 \strokec3 ee.Geometry.Polygon
\f1\b0 \cf2 \strokec2 (\
        [[[-121.11605803926491, 41.33576250033528],\
          [-121.11605803926491, 41.21397455257819],\
          [-120.92654387910866, 41.21397455257819],\
          [-120.92654387910866, 41.33576250033528]]], 
\f0\b null
\f1\b0 , 
\f0\b false
\f1\b0 );\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
// // CHANGE NEW NDVI FROM DAILY TO 8-DAY:\
\
var temporalCollection = function(collection, start, count, interval, units) \{\
  // Create a sequence of numbers, one for each time interval.\
  var sequence = ee.List.sequence(0, ee.Number(count).subtract(1));\
\
  var originalStartDate = ee.Date(start);\
\
  return ee.ImageCollection(sequence.map(function(i) \{\
    // Get the start date of the current sequence.\
    var startDate = originalStartDate.advance(ee.Number(interval).multiply(i), units);\
\
    // Get the end date of the current sequence.\
    var endDate = originalStartDate.advance(\
      ee.Number(interval).multiply(ee.Number(i).add(1)), units);\
\
    return collection.filterDate(startDate, endDate).mean()\
        .set('system:time_start', startDate.millis())\
        .set('system:time_end', endDate.millis())\
  \}));\
\};\
\
var modisNDVI = temporalCollection(modisNDVI_new, '2015-01-01', 320, 8, 'day');\
\
//////////\
\
var land_cover_year = land_cover\
          .filterDate('2017-01-01', '2017-12-31'); //Year of fire\
\
var land_cover_year = land_cover_year.select('Land_Cover')\
\
var Vis = \{ min: 1.0, max: 17.0,\
  palette: [\
    '05450a', '086a10', '54a708', '78d203', '009900', 'c6b044', 'dcd159',\
    'dade48', 'fbff13', 'b6ff05', '27ff87', 'c24f44', 'a5a5a5', 'ff6d4c',\
    '69fff8', 'f9ffa4', '1c0dff']\};\
    \
//Map.addLayer(land_cover_year,Vis,'MODIS Land Cover')\
\
\
//Create variable for MODIS Burned Area product during specific time period\
\
var selected_month = ee.Filter.date('2017-08-01','2017-08-31')\
var mcd = mcd64.filter(selected_month); //Global fires\
var mcd1 = mcd.map(function(image)\{return image.clip(geometry)\}) //Selected fire\
var sngl_img = mcd1.reduce(ee.Reducer.mean());\
var sngl_img = sngl_img.toInt()\
\
var mcd_poly = sngl_img.reduceToVectors(\{  // \
      geometry: geometry,\
      reducer: ee.Reducer.mean(),\
      scale: 500,\
    \})\
\
var burnedArea = mcd1.select('BurnDate');\
\
//Define unburned area as buffer around burned polygon\
\
var burned_polygon = mcd_poly.geometry(); //Make feature of burnedArea\
var bp_area = burned_polygon.area(500)\
var buff_area = bp_area.divide(100000)\
var buffer = burned_polygon.buffer(buff_area)\
var unburnedArea = buffer.difference(mcd_poly, ee.ErrorMargin(1));\
\
//Display MODIS Burned Area on map\
var burnedAreaVis = \{\
  min: 30.0,\
  max: 341.0,\
  palette: ['4e0400', '951003', 'c61503', 'ff1901'],\
\};\
Map.centerObject(geometry);\
Map.addLayer(burnedArea, burnedAreaVis, 'Burned Area');\
Map.addLayer(unburnedArea, burnedAreaVis, 'Unburned area');\
\
var global_burn = mcd.select('BurnDate');\
Map.addLayer(global_burn, burnedAreaVis, 'Global MCD')\
\
//Create image collection for NDVI covering fire and a ~5 year period after\
var timeseries_dates = ee.Filter.date('2017-01-01','2021-12-31')\
var modisNDVI1 = modisNDVI.map(function(image)\{return image.clip(geometry)\})\
var modisNDVI1 = modisNDVI1.filter(timeseries_dates)\
var modisNDVI = modisNDVI.map(function(image)\{return image.clip(mcd_poly)\})\
var modisNDVI = modisNDVI.filter(timeseries_dates);\
\
//Create same image collection for unburned area\
var inv_modisNDVI = modisNDVI1.map(function(image)\{return image.clip(unburnedArea)\})\
var inv_modisNDVI = inv_modisNDVI.filter(timeseries_dates);\
\
var NDVI = modisNDVI.select('NDVI');\
var inv_NDVI = inv_modisNDVI.select('NDVI');\
\
//Display NDVI on map\
var NDVIpalette = ['FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901', '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01', '012E01', '011D01', '011301'];\
//Map.addLayer(NDVI, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI");\
\
\
//Display time-series of burned and unburned NDVI individually\
//print(ui.Chart.image.series(NDVI,geometry,ee.Reducer.mean(),500));\
//print(ui.Chart.image.series(inv_NDVI,geometry));\
\
//Creating timeseries\
var combined = NDVI.combine(inv_NDVI)\
  .sort('system:time_start', true);\
print(combined,'combined')\
\
//Display time-series of burned and unburned NDVI together\
print(ui.Chart.image.series(combined,geometry,ee.Reducer.mean(),500));\
\
var reduced_coll = combined.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
print(reduced_coll,'reduced_collection')\
\
var burned = ee.Array(reduced_coll.aggregate_array('NDVI'));\
var unburned = ee.Array(reduced_coll.aggregate_array('NDVI_1'));\
\
//Create variable for dNDVI\
var diff_NDVI = (burned.subtract(unburned))\
print(diff_NDVI,'diff_NDVI') \
\
//Select dates\
var dates = ee.List(combined.aggregate_array('system:time_start'));\
print(dates,'dates')\
\
//Display dNDVI timseries\
var chart = ui.Chart.array.values(\{array: diff_NDVI, axis: 0, xLabels: dates\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                  title: 'dNDVI over whole fire',\
                  vAxis: \{\
                  title: 'dNDVI',\
                  titleTextStyle: \{italic: false, bold: true\}\
                  \},\
                \});\
                \
print(chart)\
\
//var combined_w_diff = combined.map(function(image)\{return image.addBands(diff_NDVI)\})\
//print(combined_w_diff,'combined w diff ndvi')\
\
//var dNDVI = combined_w_diff.select("constant")\
//print(dNDVI,'dNDVI')\
//print(ui.Chart.image.series(dNDVI,geometry, ee.Reducer.mean(),1000));\
\
\
//Calculate changes between images at burned pixels\
var length1 = NDVI.size();\
var list = NDVI.toList(length1);\
\
var calculated_list = list.map(function(img) \{\
    var index = list.indexOf(img)\
    img = ee.Image(img);\
    var previousIndex = ee.Algorithms.If(index.eq(0), index, index.subtract(1));\
    var previousImage = ee.Image(list.get(previousIndex))\
    var change = ee.Image(previousImage.divide(img)\
                                       .copyProperties(img, ["system:time_start"]));\
    return change;\
\})\
\
print(ui.Chart.image.series(calculated_list,geometry,ee.Reducer.mean(),500))\
\
///////////Get date and NDVI values from max fire disturbance (After this, recovery begins) \
\
var changes_collection = ee.ImageCollection.fromImages(calculated_list);\
print(changes_collection,'chngs')\
\
var changes_wtime = changes_collection.map(function(image)\{return image.addBands(image.metadata('system:time_start'))\})\
\
//var sort_wtime = changes_wtime\
var sort_wtime = changes_wtime.filter(selected_month)\
\
\
var ranked = sort_wtime.qualityMosaic('NDVI')\
//.copyProperties(changes_collection);\
\
var change = ranked.reduceRegion(\{\
  reducer: ee.Reducer.median(), \
  geometry: geometry,\
  scale: 100,\
\});\
\
var date = change.get('system:time_start');\
//var date = 1542474000000\
\
var NDVI_min = modisNDVI.filterDate(date)\
var NDVI_min = ee.Image(NDVI_min.first());\
var NDVI_min = NDVI_min.reduceRegion(\{\
  reducer: ee.Reducer.mean(), \
  geometry: geometry,\
  scale: 500,\
\});\
\
var NDVI_min = NDVI_min.get('NDVI');\
print(NDVI_min,'NDVI after burn')\
var readableDate = ee.Date(date)\
//print(date,'date')\
print(readableDate,'Date of peak disturbance')\
\
///////////////////////////////////// GET FIRE AREAS BY LAND COVER CLASSES //////////////////////////////////////////\
/*\
\
//Create mask\
var single_img = mcd.reduce(ee.Reducer.mean());\
\
var mcd_polygon = single_img.reduceToVectors(\{  // \
      geometry: null,\
      reducer: ee.Reducer.mean(),\
      scale: 500,\
    \})\
\
var lndcvr = land_cover_year.first();\
var class_1 = lndcvr.eq(1).select([0],['1']);\
var class_2 = lndcvr.eq(2).select([0],['1']);\
var class_3 = lndcvr.eq(3).select([0],['1']);\
var class_4 = lndcvr.eq(4).select([0],['1']);\
var class_5 = lndcvr.eq(5).select([0],['1']);\
var class_6 = lndcvr.eq(6).select([0],['1']);\
var class_7 = lndcvr.eq(7).select([0],['1']);\
var class_8 = lndcvr.eq(8).select([0],['1']);\
var class_9 = lndcvr.eq(9).select([0],['1']);\
var class_10 = lndcvr.eq(10).select([0],['1']);\
var class_11 = lndcvr.eq(11).select([0],['1']);\
var class_12 = lndcvr.eq(12).select([0],['1']);\
\
var mcd_c1 = global_burn.map(function(img) \{\
  return img.updateMask(class_1)\
\});\
\
var mcd_c2 = global_burn.map(function(img) \{\
  return img.updateMask(class_2)\
\});\
\
var mcd_c3 = global_burn.map(function(img) \{\
  return img.updateMask(class_3)\
\});\
\
var mcd_c4 = global_burn.map(function(img) \{\
  return img.updateMask(class_4)\
\});\
\
var mcd_c5 = global_burn.map(function(img) \{\
  return img.updateMask(class_5)\
\});\
\
var mcd_c6 = global_burn.map(function(img) \{\
  return img.updateMask(class_6)\
\});\
\
var mcd_c7 = global_burn.map(function(img) \{\
  return img.updateMask(class_7)\
\});\
\
var mcd_c8 = global_burn.map(function(img) \{\
  return img.updateMask(class_8)\
\});\
\
var mcd_c9 = global_burn.map(function(img) \{\
  return img.updateMask(class_9)\
\});\
\
var mcd_c10 = global_burn.map(function(img) \{\
  return img.updateMask(class_10)\
\});\
\
var mcd_c11 = global_burn.map(function(img) \{\
  return img.updateMask(class_11)\
\});\
\
var mcd_c12 = global_burn.map(function(img) \{\
  return img.updateMask(class_12)\
\});\
\
/*\
Map.addLayer(mcd_c1, burnedAreaVis, 'MCD C1');\
Map.addLayer(mcd_c2, burnedAreaVis, 'MCD C2');\
Map.addLayer(mcd_c3, burnedAreaVis, 'MCD C3');\
Map.addLayer(mcd_c4, burnedAreaVis, 'MCD C4');\
Map.addLayer(mcd_c5, burnedAreaVis, 'MCD C5');\
Map.addLayer(mcd_c6, burnedAreaVis, 'MCD C6');\
Map.addLayer(mcd_c7, burnedAreaVis, 'MCD C7');\
Map.addLayer(mcd_c8, burnedAreaVis, 'MCD C8');\
Map.addLayer(mcd_c9, burnedAreaVis, 'MCD C9');\
Map.addLayer(mcd_c10, burnedAreaVis, 'MCD C10');\
Map.addLayer(mcd_c11, burnedAreaVis, 'MCD C11');\
Map.addLayer(mcd_c12, burnedAreaVis, 'MCD C12');\
\
\
var icMerged = mcd_c1.merge(mcd_c2);\
var icMerged = icMerged.merge(mcd_c3)\
var icMerged = icMerged.merge(mcd_c4)\
var icMerged = icMerged.merge(mcd_c5)\
var icMerged = icMerged.merge(mcd_c6)\
var icMerged = icMerged.merge(mcd_c7)\
var icMerged = icMerged.merge(mcd_c8)\
var icMerged = icMerged.merge(mcd_c9)\
var icMerged = icMerged.merge(mcd_c10)\
var icMerged = icMerged.merge(mcd_c11)\
var icMerged = icMerged.merge(mcd_c12)\
//print('Merged image collection', icMerged);\
\
var scale = 500\
\
//c1\
var sngl_cl = mcd_c1.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea1 = burnPixelsN.multiply(250000);\
\
//c2\
var sngl_cl = mcd_c2.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea2 = burnPixelsN.multiply(250000);\
\
//c3\
var sngl_cl = mcd_c3.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea3 = burnPixelsN.multiply(250000);\
\
\
//c4\
var sngl_cl = mcd_c4.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea4 = burnPixelsN.multiply(250000);\
\
//c5\
var sngl_cl = mcd_c5.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea5 = burnPixelsN.multiply(250000);\
\
//c6\
var sngl_cl = mcd_c6.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea6 = burnPixelsN.multiply(250000);\
\
//c7\
var sngl_cl = mcd_c7.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea7 = burnPixelsN.multiply(250000);\
\
//c8\
var sngl_cl = mcd_c8.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea8 = burnPixelsN.multiply(250000);\
\
//c9\
var sngl_cl = mcd_c9.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea9 = burnPixelsN.multiply(250000);\
\
//c10\
var sngl_cl = mcd_c10.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea10 = burnPixelsN.multiply(250000);\
\
//c11\
\
var sngl_cl = mcd_c11.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea11 = burnPixelsN.multiply(250000);\
\
//c12\
\
var sngl_cl = mcd_c12.reduce(ee.Reducer.mean());\
\
var burnNdict = sngl_cl.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry2,\
  scale: scale,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var burnPixelsArea12 = burnPixelsN.multiply(250000);\
\
print(burnPixelsArea1,burnPixelsArea2,burnPixelsArea3,burnPixelsArea4,burnPixelsArea5,burnPixelsArea6,burnPixelsArea7,burnPixelsArea8,burnPixelsArea9,burnPixelsArea10,burnPixelsArea11,burnPixelsArea12,'Total area')\
\
\
\
\
*/\
\
///////////////////////////////////// SPLIT INDIVIDUAL FIRES BY LAND COVER CLASSES //////////////////////////////////////////\
\
//Find frequency of land cover classes within geometry\
var lc_image = land_cover_year.first();\
var c = lc_image.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry\
  \});\
  print(c);\
\
var frequency = lc_image.reduceRegion(\{\
      reducer:ee.Reducer.frequencyHistogram(),\
      geometry:geometry,\
      scale:1000\
    \});\
    print('landcover frequency', frequency.get('Land_Cover')); // Check for each fire to see which classes to include\
\
//Create mask for each land cover class\
var class1 = lc_image.eq(1).select([0],['1']);\
var class2 = lc_image.eq(2).select([0],['1']);\
var class3 = lc_image.eq(3).select([0],['1']);\
var class4 = lc_image.eq(4).select([0],['1']);\
var class5 = lc_image.eq(5).select([0],['1']);\
var class6 = lc_image.eq(6).select([0],['1']);\
var class7 = lc_image.eq(7).select([0],['1']);\
var class8 = lc_image.eq(8).select([0],['1']);\
var class9 = lc_image.eq(9).select([0],['1']);\
var class10 = lc_image.eq(10).select([0],['1']);\
var class11 = lc_image.eq(11).select([0],['1']);\
var class12 = lc_image.eq(12).select([0],['1']);\
var class13 = lc_image.eq(13).select([0],['1']);\
var class14 = lc_image.eq(14).select([0],['1']);\
\
//Filter by date for timeseries\
\
modisNDVI1 = modisNDVI1.filter(timeseries_dates)\
\
//Create variables for unburned + burned areas for each land cover class\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class1)\
\})\
\
var burned_NDVI1 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI1 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class4)\
\})\
\
var burned_NDVI4 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI4 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class6)\
\})\
\
var burned_NDVI6 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI6 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class7)\
\})\
\
var burned_NDVI7 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI7 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class8)\
\})\
\
var burned_NDVI8 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI8 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class9)\
\})\
\
var burned_NDVI9 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI9 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea);\
\});\
\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class10)\
\})\
\
var burned_NDVI10 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI10 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class11)\
\})\
\
var burned_NDVI11 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI11 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
var sorted_NDVI = modisNDVI1.map(function(img) \{\
  return img.updateMask(class12)\
\})\
\
var burned_NDVI12 = sorted_NDVI.map(function(img)\{\
  return img.clip(burned_polygon)\
\})  \
\
var unburned_NDVI12 = sorted_NDVI.map(function(img)\{\
  return img.clip(unburnedArea)\
\})\
\
//Map.addLayer(burned_NDVI6, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_6")\
//Map.addLayer(burned_NDVI7, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_7")\
//Map.addLayer(burned_NDVI8, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_8")\
//Map.addLayer(burned_NDVI9, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_9")\
//Map.addLayer(burned_NDVI10, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_10")\
//Map.addLayer(burned_NDVI11, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_11")\
//Map.addLayer(burned_NDVI12, \{min: -0.2, max: 1, palette: NDVIpalette\}, "NDVI_12")\
\
////////////// Get size for each burned land cover class\
\
// TOTAL AREA\
\
var single_tot = burnedArea.reduce(ee.Reducer.mean());\
\
var burnNdict = single_tot.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('BurnDate_mean');\
var area_classtot = burnPixelsN.multiply(250000);\
print(area_classtot,'total burned area')\
\
//LC 1\
\
var single_1 = burned_NDVI1.reduce(ee.Reducer.mean());\
\
var burnNdict = single_1.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class1 = burnPixelsN.multiply(250000);\
\
//LC 4\
var single_4 = burned_NDVI4.reduce(ee.Reducer.mean());\
\
var burnNdict = single_4.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class4 = burnPixelsN.multiply(250000);\
\
//LC 6\
/*\
var single_6 = burned_NDVI6.reduce(ee.Reducer.mean());\
\
var burnNdict = single_6.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class6 = burnPixelsN.multiply(250000);\
*/\
\
//LC 7\
\
var single_7 = burned_NDVI7.reduce(ee.Reducer.mean());\
\
var burnNdict = single_7.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class7 = burnPixelsN.multiply(250000);\
\
\
//LC 8\
\
var single_8 = burned_NDVI8.reduce(ee.Reducer.mean());\
\
var burnNdict = single_8.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class8 = burnPixelsN.multiply(250000);\
\
//LC 9\
\
var single_9 = burned_NDVI9.reduce(ee.Reducer.mean());\
\
var burnNdict = single_9.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class9 = burnPixelsN.multiply(250000);\
\
\
//LC 10\
var single_10 = burned_NDVI10.reduce(ee.Reducer.mean());\
\
var burnNdict = single_10.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class10 = burnPixelsN.multiply(250000);\
\
//print(area_class9,'burned class9 check')\
\
//LC 12\
var single_12 = burned_NDVI12.reduce(ee.Reducer.mean());\
\
var burnNdict = single_12.reduceRegion(\{\
  reducer: ee.Reducer.count(),\
  geometry: geometry,\
  scale: 500,\
  \});\
\
var burnPixelsN = burnNdict.getNumber('NDVI_mean');\
var area_class12 = burnPixelsN.multiply(250000);\
\
//Create timeseries for individual land cover class\
\
////////// PLOT CHART FOR LCC-1\
\
var combined1 = burned_NDVI1.combine(unburned_NDVI1)\
  .sort('system:time_start', true);\
print(combined1,'combined1')\
//print(ui.Chart.image.series(combined1,geometry,ee.Reducer.mean(),500));\
\
var reduced_coll1 = combined1.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
var burned1 = ee.Array(reduced_coll1.aggregate_array('NDVI'));\
var unburned1 = ee.Array(reduced_coll1.aggregate_array('NDVI_1'));\
\
\
var dNDVI1 = (burned1.subtract(unburned1))\
\
var dates1 = ee.List(combined1.aggregate_array('system:time_start'));\
\
var chart1 = ui.Chart.array.values(\{array: dNDVI1, axis: 0, xLabels: dates1\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart1)\
\
////////// PLOT CHART FOR LCC-4\
\
var combined4 = burned_NDVI4.combine(unburned_NDVI4)\
  .sort('system:time_start', true);\
print(combined4,'combined4')\
//print(ui.Chart.image.series(combined4,geometry, ee.Reducer.mean(), 500));\
\
var reduced_coll4 = combined4.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
var burned4 = ee.Array(reduced_coll4.aggregate_array('NDVI'));\
var unburned4 = ee.Array(reduced_coll4.aggregate_array('NDVI_1'));\
\
\
var dNDVI4 = (burned4.subtract(unburned4))\
\
var dates4 = ee.List(combined4.aggregate_array('system:time_start'));\
\
var chart4 = ui.Chart.array.values(\{array: dNDVI4, axis: 0, xLabels: dates4\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart4)\
\
\
////////// PLOT CHART FOR LCC-6\
/*\
var combined6 = burned_NDVI6.combine(unburned_NDVI6)\
  .sort('system:time_start', true);\
print(combined6,'combined')\
print(ui.Chart.image.series(combined6,geometry));\
\
var reduced_coll6 = combined6.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry));\
\});\
\
var burned6 = ee.Array(reduced_coll6.aggregate_array('NDVI'));\
var unburned6 = ee.Array(reduced_coll6.aggregate_array('NDVI_1'));\
\
\
var dNDVI6 = (burned6.subtract(unburned6))\
\
var dates6 = ee.List(combined6.aggregate_array('system:time_start'));\
\
var chart6 = ui.Chart.array.values(\{array: dNDVI6, axis: 0, xLabels: dates6\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart6)\
*/\
\
////////// PLOT CHART FOR LCC-7\
/*\
var combined7 = burned_NDVI7.combine(unburned_NDVI7)\
  .sort('system:time_start', true);\
print(combined7,'combined7')\
//print(ui.Chart.image.series(combined7,geometry,ee.Reducer.mean(),500));\
\
var reduced_coll7 = combined7.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
var burned7 = ee.Array(reduced_coll7.aggregate_array('NDVI'));\
var unburned7 = ee.Array(reduced_coll7.aggregate_array('NDVI_1'));\
\
\
var dNDVI7 = (burned7.subtract(unburned7))\
\
var dates7 = ee.List(combined7.aggregate_array('system:time_start'));\
\
var chart7 = ui.Chart.array.values(\{array: dNDVI7, axis: 0, xLabels: dates7\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart7)\
*/\
//////////PLOT CHART FOR LCC-8\
\
var combined8 = burned_NDVI8.combine(unburned_NDVI8)\
  .sort('system:time_start', true);\
print(combined8,'combined8')\
//print(ui.Chart.image.series(combined8,geometry,ee.Reducer.mean(),500));\
\
var reduced_coll8 = combined8.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
var burned8 = ee.Array(reduced_coll8.aggregate_array('NDVI'));\
var unburned8 = ee.Array(reduced_coll8.aggregate_array('NDVI_1'));\
\
\
var dNDVI8 = (burned8.subtract(unburned8))\
\
var dates8 = ee.List(combined8.aggregate_array('system:time_start'));\
\
var chart8 = ui.Chart.array.values(\{array: dNDVI8, axis: 0, xLabels: dates8\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart8)\
\
\
//////////PLOT CHART FOR LCC-9\
/*\
var combined9 = burned_NDVI9.combine(unburned_NDVI9)\
  .sort('system:time_start', true);\
print(combined9,'combined')\
print(ui.Chart.image.series(combined9,geometry));\
\
var reduced_coll9 = combined9.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry));\
\});\
\
var burned9 = ee.Array(reduced_coll9.aggregate_array('NDVI'));\
var unburned9 = ee.Array(reduced_coll9.aggregate_array('NDVI_1'));\
\
\
var dNDVI9 = (burned9.subtract(unburned9))\
\
var dates9 = ee.List(combined9.aggregate_array('system:time_start'));\
\
var chart9 = ui.Chart.array.values(\{array: dNDVI9, axis: 0, xLabels: dates9\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart9)\
*/\
\
//////////PLOT CHART FOR LCC-10\
\
var combined10 = burned_NDVI10.combine(unburned_NDVI10)\
  .sort('system:time_start', true);\
print(combined10,'combined10')\
//print(ui.Chart.image.series(combined10,geometry,ee.Reducer.mean(),500));\
\
var reduced_coll10 = combined10.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
var burned10 = ee.Array(reduced_coll10.aggregate_array('NDVI'));\
var unburned10 = ee.Array(reduced_coll10.aggregate_array('NDVI_1'));\
\
\
var dNDVI10 = (burned10.subtract(unburned10))\
\
var dates10 = ee.List(combined10.aggregate_array('system:time_start'));\
\
\
var chart10 = ui.Chart.array.values(\{array: dNDVI10, axis: 0, xLabels: dates10\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart10)\
\
\
//////////PLOT CHART FOR LCC-11\
\
/*\
var combined11 = burned_NDVI11.combine(unburned_NDVI11)\
  .sort('system:time_start', true);\
print(combined11,'combined');\
print(ui.Chart.image.series(combined11,geometry));\
\
var reduced_coll11 = combined11.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry))\
\});\
\
var burned11 = ee.Array(reduced_coll11.aggregate_array('NDVI'));\
var unburned11 = ee.Array(reduced_coll11.aggregate_array('NDVI_1'));\
\
\
var dNDVI11 = (burned11.subtract(unburned11))\
\
var dates11 = ee.List(combined11.aggregate_array('system:time_start'));\
\
var chart11 = ui.Chart.array.values(\{array: dNDVI11, axis: 0, xLabels: dates11\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
\
print(chart11)\
\
*/\
//////////PLOT CHART FOR LCC-12\
\
var combined12 = burned_NDVI12.combine(unburned_NDVI12)\
  .sort('system:time_start', true);\
print(combined12,'combined12')\
//print(ui.Chart.image.series(combined12,geometry,ee.Reducer.mean(),500));\
\
var reduced_coll12 = combined12.map(function (img) \{\
  return ee.Feature(geometry, img.reduceRegion(ee.Reducer.mean(), geometry, 500));\
\});\
\
var burned12 = ee.Array(reduced_coll12.aggregate_array('NDVI'));\
var unburned12 = ee.Array(reduced_coll12.aggregate_array('NDVI_1'));\
\
\
var dNDVI12 = (burned12.subtract(unburned12))\
\
var dates12 = ee.List(combined12.aggregate_array('system:time_start'));\
\
var chart12 = ui.Chart.array.values(\{array: dNDVI12, axis: 0, xLabels: dates12\})\
  .setOptions(\{\
                \
                  colors: ['1d6b99'],\
                  lineSize: 2,\
                  pointSize: 0,\
                \});\
print(chart12)\
\
\
///////////////////// EXPORTING ////////////////////////////\
\
var centroid = burnedArea.geometry().centroid(500);\
print(centroid,'centroid')\
Map.addLayer(centroid)\
var lokacja = centroid.coordinates()\
print(lokacja,'location')\
var lon = lokacja.get(0)\
var lat = lokacja.get(1)\
\
print(lat,lon)\
\
var FIRE_ID = '255'; // CHANGE FOR EACH FIRE\
var chartArray = ee.Array.cat([(dates1), dNDVI1], 1).getInfo();\
\
\
//CHANGE ACCORDING TO LAND COVER FREQUENCY\
chartArray = [[FIRE_ID, date, lat, lon, area_classtot, area_class1]].concat(chartArray);\
chartArray = [['FIRE_ID','date','lat','lon','total_area','lc_1']].concat(chartArray);\
  \
//print(chartArray,'chartArray')\
\
var featureCollection = ee.FeatureCollection(chartArray\
                        .map(function(element)\{\
                        return ee.Feature(null,\{prop:element\})\}))\
\
\
print(featureCollection)\
\
//Export.table.toDrive(ee.Element(chartArray));\
Export.table.toDrive(\{\
  collection: featureCollection,\
  folder: 'fire_output',\
  description:'dNDVI_Fire_' + FIRE_ID,\
  fileFormat: 'CSV',\
  selectors: ['prop']\
\});\
\
\
}